#Saber.py
import discord#imports discord library
import random #imports random library
from discord.ext import commands #pulls commands from discord library
from random import choice

client = commands.Bot(command_prefix = '~') #instance of bot

@client.event                   #event decorator
async def on_ready():           #when bot is ready
    print('Bot is Online')      #print that it is ready

@client.event                   #event decorator
async def on_member_join(ctx, member):       #when a member joins the server
    await member.join(f'{member} now tell me... Are you my master?')    #sends message when person leaves the server
    print(f'{member} now tell me. Are you my master?')      #print string


@client.event                   #event decorator
async def on_member_remove(ctx, member):     #When a member leaves the server
    await ctx.send(f'{member} was not wothy of being my master.')   #sends message when member leaves the server
    print(f'{member} was not worthy to be my master.')      #print string


@client.command(aliases=['IsRemondGay'])
async def remond(ctx):
    await ctx.send('Yes. Remond is gay.')


@client.command()
async def ping(ctx):            #when .ping is sent
    await ctx.send(f'Pong! {round(client.latency * 1000)}ms')     #the bot replys Pong! and actually displays ping in ms

@client.command(aliases=['8ball'])
async def _8ball(ctx, *, question):
    responses = ["It is certain.",
                "It is decidedly so.",
                "Without a doubt.",
                "Yes - definitely.",
                "You may rely on it.",
                "As I see it, yes.",
                "Most likely.",
                "Outlook good.",
                "Yes.",
                "Signs point to yes.",
                "Reply hazy, try again.",
                "Ask again later.",
                "Better not tell you now.",
                "Cannot predict now.",
                "Concentrate and ask again.",
                "Don't count on it.",
                "My reply is no.",
                "My sources say no.",
                "Outlook not so good.",
                "Very doubtful."]
    await ctx.send(f'Question: {question}\nAnswer: {random.choice(responses)}')

@client.command()
@commands.has_permissions(manage_messages=True)      #checks to see if person has manage message permissions
async def clear(ctx, amount=10):            #command name
    await ctx.channel.purge(limit=amount + 1)           #awaiting the command to be sent. when command is sent, deletes amount of messages specified. if none are specified, deletes the default (in this case, 10).
    await ctx.send(f'Gone. Reduced to atoms.')      #sends message to channel command was ran and executed in

@client.command()
@commands.has_permissions(administrator=True)
async def kick(ctx, member : discord.Member, *, reason=None):
    await member.kick(reason=reason)
    await ctx.send(f'{member} is no longer a master...')

@client.command()
@commands.has_permissions(administrator=True)
async def ban(ctx, member : discord.Member, *, reason=None):
    await member.ban(reason=reason)
    await ctx.send(f'{member} was killed in the grail war.')

@client.command()
@commands.has_permissions(administrator=True)
async def unban(ctx, *, member):
    banned_users = await ctx.guild.bans()
    member_name, member_discriminator = member.split('#')

    for ban_entry in banned_users:
        user = ban_entry.banned_user

        if (user.name, user.discriminator) == (member_name, member_discriminator):
            await ctx.guild.unban(user)
            await ctx.send(f'{user.name}#{user.discriminator} has been brought back with the power of the grail.')
