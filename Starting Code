#Saber.py
import discord  #imports discord library
import math #import the math library
import random #imports random library
from discord.ext import commands #pulls commands from discord library
from random import choice   #from the random library, imports choice

intents = discord.Intents.default()                                                     #discord bot permissions
intents.members = True                                                                  #log members = true

client = commands.Bot(command_prefix = '~', case_insensitive=True, intents=intents)     #instance of bot and its prefix

@client.event                                                                           #event decorator
async def on_ready():                                                                   #when bot is ready
    print('Bot is Online')                                                              #print that it is ready to console

@client.event                                                                           #event decorator
async def on_member_join(member):                                                       #when a member joins the server
    print(f'{member} now tell me. Are you my master?')                                  #print string to console

@client.event                                                                           #event decorator
async def on_member_join(member : user.mention):                                        #when member joins
    channel = discord.utils.get(member.guild.channels, name='welcome')                  #look for channel named welcome
    await channel.send(f"{member} now tell me... are you my master?")                   #send message to channel welcome


@client.event                                                                           #event decorator
async def on_member_remove(member):                                                     #When a member leaves the server
    print(f'{member} was not worthy to be my master...')                                #print string to console

@client.event                                                                           #event decorator
async def on_member_remove(member : user.mention):                                      #when member leaves
    channel = discord.utils.get(member.guild.channels, name='welcome')                  #look for channel named welcome
    await channel.send(f"{member} was not worhty to be my master...")                   #send message to welcome channel



@client.command(aliases=['IsRemondGay'])                                                #command instance with the alias, "IsRemondGay"
async def remond(ctx):                                                                  #looking for command named remond (or the alias "IsRemondGay") and passes through the context modifier
    await ctx.send('Yes. Remond is gay.')                                               #if the command is sent in a channel, responds in channel message is sent to, "Yes. Remond is Gay."


@client.command()                                                                       #command instance
async def ping(ctx):                                                                    #defines the command ping and passes through the context
    await ctx.send(f'Pong! {round(client.latency * 1000)}ms')                           #the bot replys Pong! and actually displays ping in ms to channel command was ran

@client.command(aliases=['8ball'])                                                      #command instance with alias "8ball"
async def _8ball(ctx, *, question):                                                     #looks for ^_8ball (or ^8ball) sent to a channel
    responses = ["It is certain.",                                                      #the list of responses
                "It is decidedly so.",
                "Without a doubt.",
                "Yes - definitely.",
                "You may rely on it.",
                "As I see it, yes.",
                "Most likely.",
                "Outlook good.",
                "Yes.",
                "Signs point to yes.",
                "Reply hazy, try again.",
                "Ask again later.",
                "Better not tell you now.",
                "Cannot predict now.",
                "Concentrate and ask again.",
                "Don't count on it.",
                "My reply is no.",
                "My sources say no.",
                "Outlook not so good.",
                "Very doubtful."]
    await ctx.send(f'Question: {question}\nAnswer: {random.choice(responses)}')             #when command is issued, sends the question back and picks a random response from variable, "response" to send back to user

@client.command()
@commands.has_permissions(manage_messages=True)                                             #checks to see if person has manage message permissions
async def clear(ctx, amount=10):                                                            #defines clear and passes through context, and the default amount to delete
    await ctx.channel.purge(limit=amount + 1)                                               #awaiting the command to be sent. when command is sent, deletes amount of messages specified. if none are specified, deletes the default (in this case, 10).
    await ctx.send(f'Gone. Reduced to atoms.')                                              #sends message to channel command was ran and executed in

@client.command()                                                                           #command instance
@commands.has_permissions(administrator=True)                                               #checks for administrator permissions
async def kick(ctx, member : discord.Member, *, reason=None):                               #defines command "kick" and passes through context, member:the user's @, and the reason
    await member.kick(reason=reason)                                                        #kicks member for reason
    await ctx.send(f'{member} is no longer a master...')                                    #sends confirmation message to channel command was issued in

@client.command()                                                                           #command instance
@commands.has_permissions(administrator=True)                                               #cheks for permissions administrator
async def ban(ctx, member : discord.Member, *, reason=None):                                #defines command "ban" and passes throught context, member:the user's @, and the reason
    await member.ban(reason=reason)                                                         #bans member for reason
    await ctx.send('EXCALIBUR!')                                                            #sends confirmation message

@client.command(aliases=['unban'])                                                          #currently not working
@commands.has_permissions(administrator=True)                                               #currently not working
async def pardon(ctx, *, member):                                                           #Currnetly not working
    banned_users = await ctx.guild.bans()                                                   #Currtenly not working
    member_name, member_discriminator = member.split('#')                                   #Currently not working

    for ban_entry in banned_users:                                                          #Currently not working
        user = ban_entry.banned_users                                                       #Currently not working

        if (user.name, user.discriminator) == (member_name, member_discriminator):          #Currently not working
            await ctx.guild.unban(user)
            await ctx.send(f'{user.name}#{user.discriminator} has been brought back with the power of the grail.')

@client.command(aliases=['CommandSpell', 'CommandSeal'])                                    #command instanace with aliases "CommandSpell", and "CommandSeal"
async def TheGame(ctx):
    embed = discord.Embed(title = "The command seal has responded to your summons...", description =  (random.randint(100000, 350000)), color = (0xC900FF)) #creates an embeded message with the title = title, the description/body text = decription and the color = color
    await ctx.send(embed = embed)                                                           #sends the embed

@client.command()                                                                           #command instance
@commands.has_permissions(administrator=True)                                               #checks to see if user has administrator permissions
async def unban(ctx, id: int):                                                              #defines command, "unban" and passes through context, and the user's discord id (not @. Enable developer mode and right click on the user's name and click copy id)
    user = await client.fetch_user(id)                                                      #tells the bot to use the given id
    await ctx.guild.unban(user)                                                             #check to see if the person can be unbanned. if they can, unban them.
    await ctx.send('The grail has revived the banned user...')                              #sends confirmation message


@client.command()                                                                           #command instance
async def help(ctx):                                                                        #defines command help and passes context
    emebed = discord.Embed(title = "Here's the commands",                                   #embed with
                            description = "^help - brings this message up",
                                           "^ban @user and kick @user - kicks and bans the user mentioned respective of the command",
                                           "^unban DISCORD ID - unbans the user using their DISCORD ID. Not their mention or @, but the DISCORD ID (more will be explained down below)",
                                           "''^CommandSpell, ^CommandSeal - Both send a random set of 6 digit numbers from' '100000' to '350000'",
                                           "^clear some number - clears messages sent, default is set at 10, but you can input a number after ^clear to clear a specific amount of messages",
                                           "^'8'ball - does exactly what it sounds like. ^8ball Is Remond Gay? will generate an _8ball response",
                                           "^ping - sends Pong! and actually sends the bot's ping",
                                           "^IsRemondGay - Yes.",
                                           "For the DISCORD ID stuff you need to have developer mode enabled on discord.",
                                                "-Under appearence, scroll all the way down and toggle developer mode on"
                                                "-That's it.",
                                           "Right click on the user's name the click Copy ID"
                                           "Insert the user's DISCORD ID"
    await ctx.send(embed = embed)



































client.run('NzcxNDEyNjA4OTc2MDI3NjY4.X5rv-g.GWC_KGuODNVf5gW4ATZWgOCZb_U')   #discord token
